# -*- coding: utf-8 -*-
"""Workshop_ship.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KB7PtaR1mm2EzNYbQEyS-iMZkbcTHW6e
"""

# Install libraries
!pip install pandas scikit-learn gradio

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
import gradio as gr

# --- Load Dataset ---
url = "https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv"
df = pd.read_csv(url)

# --- Data Cleaning ---
df['Age'].fillna(df['Age'].median(), inplace=True)
df['Sex'] = df['Sex'].map({'male': 0, 'female': 1})
df['Embarked'].fillna('S', inplace=True)  # Fill missing ports
df['Embarked'] = df['Embarked'].map({'S': 0, 'C': 1, 'Q': 2})

# --- STUDENT: Choose your Features! ---
features = ['Pclass', 'Sex', 'Age', 'Fare']  # Try adding 'Embarked'

X = df[features]
y = df['Survived']

# Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model
model = LogisticRegression()
model.fit(X_train, y_train)

# Evaluate
preds = model.predict(X_test)
acc = accuracy_score(y_test, preds)
print(f"‚úÖ Model Accuracy: {acc:.2f}")

# Gradio Interface
def predict_survival(Pclass, Sex, Age, Fare):
    input_data = pd.DataFrame([[Pclass, Sex, Age, Fare]], columns=features)
    prediction = model.predict(input_data)[0]
    return "Survived üö¢" if prediction == 1 else "Did not survive ‚ùå"

demo = gr.Interface(
    fn=predict_survival,
    inputs=[
        gr.Number(label="Pclass (1/2/3)"),
        gr.Number(label="Sex (0 = Male, 1 = Female)"),
        gr.Number(label="Age"),
        gr.Number(label="Fare")
    ],
    outputs="text",
    title="Titanic Survival Predictor"
)

demo.launch()
